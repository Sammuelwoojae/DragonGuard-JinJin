version: "3.9"

services:

  backend:
    build:
      context: ./backend
    command: gradle bootRun
    container_name: backend
    ports:
      - 8080:8080
    networks:
      - app-tier
    depends_on:
      - db
      - kafka
    restart: on-failure
    tty: true

  db:
    image: mysql
    container_name: db
    restart: on-failure
    ports:
      - 3307:3306
    volumes:
      - data_mysql:/var/lib/mysql
    env_file:
      - .env
    networks:
      - app-tier
    tty: true

  redis:
    image: redis:latest
    container_name: redis
    restart: on-failure
    ports:
      - 6379:6379
    networks:
      - app-tier
    tty: true

  zookeeper:
    image: confluentinc/cp-zookeeper
    container_name: zookeeper
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
    ports:
      - 2181:2181
    networks:
     - app-tier
  
  kafka:
    image: confluentinc/cp-kafka
    ports:
      - 9092:9092
    container_name: kafka
    restart: on-failure
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: dresses:1:1,ratings:1:1
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper
    networks:
      - app-tier

  kafdrop:
    image: obsidiandynamics/kafdrop:latest
    ports:
      - 9000:9000
    container_name: kafdrop
    restart: on-failure
    environment:
      KAFKA_BROKERCONNECT: kafka:9092
      JVM_OPTS: "-Xms32M -Xmx64M"
      SERVER_SERVLET_CONTEXTPATH: /
    depends_on:
      - kafka
    networks:
      - app-tier
    tty: true
  
  scraping:
    build:
      context: ./scraping
    ports:
      - 5000:5000
    environment:
      FLASK_APP: ./app.py
      APP_NAME: scraping
      FLASK_DEBUG: 1
    container_name: scraping
    restart: on-failure
    depends_on:
      - kafka
    volumes:
      - ./scraping:/scraping/
    networks:
      - app-tier
    tty: true

  nginx:
    build: ./nginx
    ports:
      - 80:80
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    container_name: nginx
    networks:
      - app-tier
    depends_on:
      - backend
      - scraping
    tty: true

networks:
  app-tier:
    driver: bridge

volumes:
  data_mysql: null
